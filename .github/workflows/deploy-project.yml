name: deploy-project

on:
  push:
    branches:
      - 'devops'

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
      # Github action to checks-out your repository. 
      - name: Git CheckOut
        uses: actions/checkout@v2
        
      # GitHub Action to login against a Docker registry. (image repository)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Make envfile
      #   uses: SpicyPizza/create-envfile@v1.3
      #   with:
      #   # envkey_DEBUG: false
      #   # envkey_SOME_API_KEY: "123456abcdef"
      #   # envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #   # some_other_variable: foobar
      #     envkey_PORT: ${{ secrets.ENV_PORT }}
      #     envkey_HOST: ${{ secrets.ENV_HOST }}
      #     envkey_NODE_ENV: ${{ secrets.ENV_NODE }}
      #     envkey_APP_KEY: ${{ secrets.ENV_APP_KEY }}
      #     envkey_DRIVE_DISK: ${{ secrets.ENV_DRIVE_DISK }}
      #     envkey_SESSION_DRIVER: ${{ secrets.ENV_SESSION_DRIVER }}
      #     envkey_CACHE_VIEWS: ${{ secrets.ENV_CACHE_VIEWS }}
      #     envkey_DB_CONNECTION: ${{ secrets.ENV_DB_CONNECTION }}
      #     envkey_MYSQL_HOST: ${{ secrets.ENV_MYSQL_HOST }}
      #     envkey_MYSQL_PORT: ${{ secrets.ENV_MYSQL_PORT }}
      #     envkey_MYSQL_USER: ${{ secrets.ENV_MYSQL_USER }}
      #     envkey_MYSQL_PASSWORD: ${{ secrets.ENV_MYSQL_PASSWORD }}
      #     envkey_MYSQL_DB_NAME: ${{ secrets.ENV_MYSQL_DB_NAME }}
      #   # directory: internSIT/internSIT
      #   # file_name: .env
      #   # fail_on_empty: false
      # - name: 'direct'
      #   run: |
      #     ls -la
      #     pwd
      #     ls -la
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/int-371-09-17-78/intern-sit:1.0.0
          
#test
  executing-ssh-commands:
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      # - name: Git CheckOut
      #   uses: actions/checkout@v2
      #   with:
      #     ref: ${{ github.event.pull_request.head.sha }}
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          # password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo whoami
            echo ${{secrets.GITHUB_TOKEN}} | docker login ghcr.io -u ${{github.actor}} --password-stdin
            cd ./internSIT
            git pull origin devops
            docker stop intern-sit-app && docker rm intern-sit-app
            docker image rm ghcr.io/int-371-09-17-78/intern-sit:1.0.0
            docker compose up --build -d   
            docker image prune -af
         
            
# docker stop intern-sit-nginx && docker rm intern-sit-nginx
#             docker image rm nginx:lastest
# docker exec -it intern-sit-db mysql -uroot -phelloDEV371_ -h localhost  
            # docker stop intern-sit-app && docker rm intern-sit-app
            # docker image rm ghcr.io/int-371-09-17-78/intern-sit:1.0.0        
# test
#test
# az acr login -n suesiRegistry
            
            # docker-compose -f backend-sit.yaml down && docker rmi -f $(docker images -a -q)
            # docker-compose pull
            # docker-compose -f backend-sit.yaml up -d
            # docker image prune -af
  # health-check:
  #   needs:
  #     - executing-ssh-commands
  #     - build
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: health-check
  #       run: sleep 30 && curl http://20.205.212.121:5000/api/show/products