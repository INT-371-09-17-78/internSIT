@layout('layouts/app')
@set('title', 'students page')
@set('firstStep', '')
@set('lastStep', '')
@section('student-information')
<section class="h-full w-full z-[5] relative flex flex-col pt-5">
  <div class="flex flex-col z-10 px-11">
    @if(auth.user.role !== "student")
    <a href="{{ route('/student-information', {}, { qs: { month: 2 }}) }}">
      <div class="w-fit my-3 flex items-center space-x-2 cursor-pointer">
        <img class="w-5 h-5" src="{{ asset('assets/images/arrow.svg') }}" />
        <p class="font-semibold">Back</p>
      </div>
    </a>
    @end
    <p class="text-xl font-bold">{{studentUser.firstname + " " + studentUser.lastname}}</p>
    <div class="flex space-x-2">
      <p>{{studentUser.user_id}}</p>
      <p>|</p>
      <p>{{studentUser.student.plan ? studentUser.student.plan + " month" : "" }}</p>
    </div>

    <a href="{{ route('/student/:id/information', { id: studentUser.user_id }) }}" class="link link-primary">Student information</a>
  </div>
  {{--  @if(auth.user.role === "student" && !studentUser.student.plan)
    <div class="w-full h-full absolute top-0 flex justify-center items-center">
      <img src="{{ asset('assets/images/waiting.gif') }}" class="w-24 h-24"/>  
      <p class="text-3xl text-gray-400">Wait for staff assign your plan</p>
      <img src="{{ asset('assets/images/waiting.gif') }}" class="w-24 h-24"/>  
    </div>
  @end  --}}

  <div class="flex mt-5 px-11">
    @if(nextStep.name === "TR-01" && auth.user.role === "student" && !studentUser.student.plan)
    <form id="planForm" method="POST" action="/api/user/student/{{studentUser.user_id}}?_method=PATCH" class="flex space-x-2 z-10">
      <select {{disabled}} id="study" name="study"
      class="select select-sm rounded-xl select-bordered h-9 px-4 lg:text-base w-full max-w-xs">

      <option disabled selected>{{studentUser.student.plan ? studentUser.student.plan + " month" : "Please assigns your plan"}}</option>
      @each(plan in plans)
        <option value={{ plan }}>({{ plan + " month" }})</option>
      @end
      </select>
      @if(disabled)
        <button id="editButton" class="btn btn-sm btn-primary rounded-3xl text-white capitalize" onclick="editPlan(event)">edit</button>
      @else
        <button id="submitButton" class="btn btn-sm btn-primary rounded-3xl text-white capitalize">confirm</button>
      @end
    </form>
    @end
    @if(studentUser.student.plan)
    <div class="w-full flex justify-center">
      <ul class="steps">
        @each((step,index) in stepPaged)
          @if(index === 0)
            @set('firstStep', step.name)
          @elseif(index === stepPaged.length - 1)
            @set('lastStep', step.name)
          @end
          <li class="after:cursor-pointer step font-bold {{nextStep.name === step.name && "after:border-4 after:border-[#F4C064]"}} {{step.status === "Waiting" ? "text-blue-700" : step.status === "Pending" ? "text-yellow-700 step-primary" : step.status === "Approved" ? "text-green-700 step-primary" : step.status === "Disapproved" ? "text-red-700 step-primary" : ""}}">{{step.name}} {{step.status ? step.status : ""}}</li>
        @end
      </ul>
      @if(firstStep !== firstOfAllStep)
      <button class="order-first pr-10" id="btn_prev" onclick="changeSteps('{{firstStep}}',false)">
        <svg width="10" height="16" viewBox="0 0 10 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M10 1.416L8.49618 -4.76837e-07L-3.53161e-07 8L8.49618 16L10 14.584L3.00765 8L10 1.416Z" fill="#495057"/>
        </svg>
      </button>
      @end
      @if(lastStep !== lastOfAllStep)
      <button class="order-last pl-10" id="btn_next" onclick="changeSteps('{{firstStep}}',true)">
        <svg width="10" height="16" viewBox="0 0 10 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M0 14.584L1.50382 16L10 8L1.50382 0L0 1.416L6.99235 8L0 14.584Z" fill="#495057"/>
        </svg>
      </button>
      @end
    </div>
    @end
  </div>

  @if(studentUser.student.plan)
  <div class="flex flex-wrap w-full space-x-5 pt-9 justify-center">
    <div>
      <canvas id="pdfViewer" class="bg-[#DDE2E5] h-96 w-72"></canvas>
      <div class="mt-2" id="control-page">
        <button id="prev" class="btn btn-sm btn-primary rounded-3xl text-white" onclick="onPrevPage()">Previous</button>
        <button id="next" class="btn btn-sm btn-primary rounded-3xl text-white" onclick="onNextPage()">Next</button>
        <span>Page: <span id="page_num"></span> / <span id="page_count"></span></span>
      </div>
    </div>
    
    <div class="flex flex-col pt-5">
      <form id="formElem">
        <div class="flex flex-col space-y-2">
          <p class="font-medium text-lg">{{nextStep.name}}</p>
          @if(auth.user.role === "student")
          <button type="button" class="btn btn-primary btn-sm h-10 w-fit">Download plain document</button>
          @end
          <div class="bg-[#F4F4F4] w-[26rem] h-fit rounded-md p-5">
            <div class="border-b-2 border-[#A8B0B8] pb-5 space-y-2">
              <p class="font-medium">Submission</p>
              @if(currentSteps.status ==="Pending" || currentSteps.status === "Disapproved")
              <div class="text-[#858D95] flex flex-col">
                <p>Submitted:</p>
                <p>{{currentSteps.createAt}}</p>
              </div>
              @else
              <p class="text-[#858D95]">Not Submitted</p>
              @end
              {{--  <div class="form-control">
                <label class="input-group input-group-sm">
                  <span>Choose file</span>
                  <input type="file" id="myPdf" class="input input-primary hidden" />
                  <input type="text" class="input border-none disabled:bg-white disabled:text-black disabled:cursor-default input-sm" disabled />
                  <span>Submit</span>
                </label>
              </div>  --}}
              @if(auth.user.role == 'student')
              <div class="form-control">
                <label class="input-group input-group-sm">
                  <label for="myPdf" class="flex-shrink-0 btn btn-outline btn-sm border-[#A8B0B8]">Choose file</label>
                  <input type="file" id="myPdf" class="input input-primary hidden" />
                  <input type="text" id="showInput" class="input input-bordered border-[#A8B0B8] disabled:bg-white disabled:text-black disabled:cursor-default input-sm" disabled />
                  <button type="submit" class="btn btn-primary btn-sm">Submit</button>
                </label>
              </div>
              @end
            </div>
            <div class="pt-5">
              <p class="font-medium">Approval</p>
              <div class="flex flex-col space-y-2">
                @if(auth.user.role != "student" )
                  @if(currentSteps.status === "Pending")
                  <div class="flex" id="radio-group">
                    <div class="form-control w-fit">
                      <label class="label cursor-pointer space-x-2">
                        <input type="radio" id="approved" name="radio" value="Approved" class="radio checked:bg-blue-500" checked onclick="removeTextArea()"/>
                        <span class="label-text font-bold">Approved</span> 
                      </label>
                    </div>   
                    <div class="form-control w-fit">
                      <label class="label cursor-pointer space-x-2">
                        <input type="radio" id="disapproved" name="radio" value="Disapproved" class="radio checked:bg-blue-500" onclick="showTextArea()"/>
                        <span class="label-text font-bold text-red-500">Disapproved</span> 
                      </label>
                    </div>  
                  </div>
                  <button class="btn btn-sm btn-primary rounded-md text-white capitalize">confirm</button>
                  @elseif(currentSteps.status === "Disapproved")
                  <p class="text-[#858D95] mt-2">Please waiting for re-submitted</p>
                  <div class="flex" id="radio-group">
                    <div class="form-control w-fit">
                      <label class="label cursor-pointer space-x-2">
                        <input type="radio" id="approved" name="radio" value="Approved" class="radio checked:bg-blue-500 disabled:bg-gray-600" disabled onclick="removeTextArea()"/>
                        <span class="label-text font-bold">Approved</span> 
                      </label>
                    </div>   
                    <div class="form-control w-fit">
                      <label class="label cursor-pointer space-x-2">
                        <input type="radio" id="disapproved" name="radio" value="Disapproved" class="radio checked:bg-blue-500 disabled:checked:bg-black" checked disabled onclick="showTextArea()"/>
                        <span class="label-text font-bold text-red-500">Disapproved</span> 
                      </label>
                    </div>  
                  </div>
                  <div class="flex space-x-2">
                    <p class="text-[#858D95]">Reason:</p>
                    <p>{{currentSteps.reason}}</p>
                  </div>
                  <button class="btn btn-sm btn-primary rounded-md text-white capitalize" disabled>confirm</button>
                  @else
                  <p class="text-[#858D95]">Please waiting for submitted</p>
                  @end
                {{--  <textarea id="content" name="content" class="p-3 w-full h-28 text-xs rounded-lg" placeholder="Write your content..."></textarea>  --}}
                @else
                  @if(currentSteps.status ==="Disapproved")
                  <p class="font-bold text-red-500">{{nextStep.name}} disapprove</p>
                  <div class="flex flex-col">
                    <p class="text-[#858D95]">Please fix the document and re-submit</p>
                    <div class="flex space-x-2">
                      <p class="text-[#858D95]">Reason:</p>
                      <p>{{currentSteps.reason}}</p>
                    </div>
                  </div> 
                  @else
                  <p class="text-[#858D95]">Not approved</p>
                  @end
                @end
                  {{--  <button class="btn btn-sm btn-primary rounded-3xl text-white">not approve</button>
                  <textarea onkeyup="validateInput()" id="no_approve_reason" name="no_approve_reason" class="p-3 w-full h-28 text-xs rounded-lg border-2 border-red-500 placeholder="Write your content...">{{post ? post.content : ''}}</textarea>  --}}
            </div>
            </div>
          </div>
          {{--  @if(currentSteps.status != "Approved")
          <a class="link link-primary" href="/api/file/steps?userId={{studentUser.user_id}}&&docId={{currentSteps.name}}&&prev=prev">Open PDF file</a>
          @end  --}}
        </div> 
        {{--  @if(currentSteps.status ==="Disapproved")
        <div class="flex flex-col mt-5">
          <p class="font-bold text-red-500">{{nextStep.name}} disapprove</p>
          <p>{{currentSteps.reason}}</p>
        </div> 
        @end
        @if(auth.user.role === "student")
          <input type="file" id="myPdf" class="mt-5" /><br>
          <button class="btn btn-sm btn-primary rounded-3xl text-white mt-2">submit</button>
        @end  --}}
      </form>
    </div>
  </div>
  @else
  @if(auth.user.role === 'student')
  <div class="absolute left-80 top-16">
    <svg width="103" height="25" viewBox="0 0 103 25" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10.1783 11.7942C41.1941 -3.08664 71.6458 -3.60876 103 8.66143C100.744 11.4026 98.827 10.3584 97.3608 9.83624C86.0823 6.31181 74.4655 5.92018 62.9614 5.39805C46.382 4.61487 30.7052 9.05306 15.3662 16.2324C14.6895 16.4935 14.1254 17.0156 12.7719 18.0599C20.5541 19.8873 28.3367 16.7545 35.1037 20.4095C34.9906 20.9316 34.9906 21.5843 34.878 22.1064C29.8027 22.498 24.6148 22.8896 19.539 23.4118C14.4637 23.9339 9.50157 24.5866 4.42628 24.9782C0.704399 25.2392 -0.874757 23.1507 0.478653 19.2347C2.17042 14.1439 4.53888 9.44462 6.6816 4.61487C6.90735 4.09274 7.2457 3.44005 7.69666 3.17899C8.93746 2.65687 10.1783 2.5263 11.5317 2.13468C11.7569 3.44006 12.321 4.87593 12.2084 6.05074C11.9826 7.61712 11.1933 8.92249 10.1783 11.7942Z" fill="#4263EB"/>
    </svg>
    <p class="text-primary font-medium pl-20">Click here to add new academic year</p>
  </div>   
  @else
  <div class="flex-1 h-full flex flex-col justify-center items-center text-3xl font-semibold space-y-5 text-black/50 m-auto">
    <p>Please wait for student assigns a plan.</p>
  </div>  
  @end
  @end
</section>
<script>  

  window.history.replaceState({}, '', '/student/{{studentUser.user_id}}')
  const showTextArea = () => {
    const c = document.getElementById("reason")
    if(c) return
    const referenceNode = document.getElementById("radio-group")
    const ele = document.createElement("textarea")
    ele.id = "reason"
    ele.name = "reason"
    ele.className = "p-3 w-full h-28 text-xs rounded-lg"
    ele.placeholder = "Write your reasons why disapproved..."
    referenceNode.parentNode.insertBefore(ele, referenceNode.nextSibling)
  }
  const removeTextArea = () => {
    const c = document.getElementById("reason")
    if(c) c.remove()
  }
  const editPlan = (event) => {
    event.preventDefault()
    document.getElementById("study").disabled = false
    document.getElementById("editButton").remove()
    const ele = document.createElement("button")
    ele.id = "submitButton"
    ele.className = "btn btn-sm btn-primary rounded-3xl text-white"
    ele.innerHTML = "submit"
    document.getElementById("planForm").appendChild(ele)
  }

  const middleEllipsis = (str) => {
    if (str.length > 35) {
      return str.substring(0, 10) + '...' + str.substring(str.length - 10)
    }
    return str
    }
  let pdfFile
  const input = document.getElementById("myPdf")
  if(input){  
    input.onchange = (e) => {
    const [file] = e.target.files
    pdfFile = file
    document.getElementById('showInput').value = middleEllipsis(file.name)
  }
  }

  const changeSteps = async (firstStepPaging, gnext) => {
    console.log(firstStepPaging)
    console.log(gnext)
    const urlParams = new URLSearchParams({
      firstStepPaging: firstStepPaging,
      gnext: gnext
    })
    window.location.href = '/student/{{studentUser.user_id}}?' + urlParams
  }

  // const formElem2 = document.getElementById('formElem2')
  // if(formElem2)
  // formElem2.onsubmit = async (event) => {
  //   event.preventDefault() 
  //   console.log('dsadsas')
  //   const status = document.querySelector('input[name="radio"]:checked').value
  //   const body = {
  //     status : status,
  //     doc: '{{nextStep.name}}' ? '{{nextStep.name}}' : 'TR-01',
  //     reason : status === "Approved" ? "" : document.getElementById('reason').value
  //   }

  //   await fetch('/api/user/student/{{studentUser.user_id}}?_method=PATCH', {
  //       method: 'POST',
  //       headers: {
  //         'Accept': 'application/json',
  //         'Content-Type': 'application/json'
  //       },
  //       body: JSON.stringify(body),
  //   })
    
  //   window.location.reload()
  // }
  const formElem = document.getElementById('formElem')
  if(formElem)
  formElem.onsubmit = async (event) => {
    event.preventDefault() 
    let status = ''
    let reason = ''
    if(!document.querySelector('input[name="radio"]:checked')){
      status = 'Pending'
    }else{
      status = document.querySelector('input[name="radio"]:checked').value
    }
    if(document.getElementById('reason')){
      reason = document.getElementById('reason').value
    }
    const body = {
      status : status,
      doc: '{{nextStep.name}}' ? '{{nextStep.name}}' : 'TR-01',
      reason : reason
    }
    const formData = new FormData(formElem)
    formData.append('files', pdfFile)
    formData.append('docId', '{{nextStep.name}}')
    formData.append('statId', 'Pending')
    formData.append('studentId', {{studentUser.user_id}})
    
    await fetch('/api/user/student/{{studentUser.user_id}}?_method=PATCH',{
      method: 'PATCH',
      headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
      },
      body: JSON.stringify(body),
    })
    await fetch('/api/file/steps?_method=POST', {
        method: 'POST',
        body: formData,
    })
    window.location.reload()
  }

  const formElem3 = document.getElementById('formElem3')
  if(formElem3)
  formElem3.onsubmit = async (event) => {
    event.preventDefault() 
    const body = {
      status : 'Approved',
      doc: '{{nextStep.name}}'
    }

    await fetch('/api/user/student/{{studentUser.user_id}}?_method=PATCH', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(body),
    })
    
    window.location.reload()
  }
var url ='/api/file/steps?userId={{studentUser.user_id}}&&docId={{currentSteps.name}}&&statId={{currentSteps.status}}' 
var pdfjsLib = window['pdfjs-dist/build/pdf']

pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://mozilla.github.io/pdf.js/build/pdf.worker.js'  
if(document.getElementById('pdfViewer'))
var pdfDoc = null,
    pageNum = 1,
    pageRendering = false,
    pageNumPending = null,
    scale = 0.8,
    canvas = document.getElementById('pdfViewer'),
    ctx = canvas.getContext('2d')

function renderPage(num) {
  pageRendering = true
  pdfDoc.getPage(num).then(function(page) {
    var viewport = page.getViewport({scale: scale})
    canvas.height = viewport.height
    canvas.width = viewport.width

    var renderContext = {
      canvasContext: ctx,
      viewport: viewport
    }
    var renderTask = page.render(renderContext)

    renderTask.promise.then(function() {
      pageRendering = false
      if (pageNumPending !== null) {
        renderPage(pageNumPending)
        pageNumPending = null
      }
    })
  })

  document.getElementById('page_num').textContent = num
}

function queueRenderPage(num) {
  if (pageRendering) {
    pageNumPending = num
  } else {
    renderPage(num)
  }
}

 function onPrevPage() {
  if (pageNum <= 1) {
    return
  }
  pageNum--
  queueRenderPage(pageNum)
}

function onNextPage() {
  if (pageNum >= pdfDoc.numPages) {
    return
  }
  pageNum++
  queueRenderPage(pageNum)
}

if({{currentSteps.status != "Approved"}}){
  if(document.getElementById('control-page'))
  document.getElementById('control-page').classList.add("hidden")
  pdfjsLib.getDocument(url).promise.then((pdfDoc_)=> {
    pdfDoc = pdfDoc_
    document.getElementById('page_count').textContent = pdfDoc.numPages

    renderPage(pageNum)
  })
}

$("#myPdf").on("change", async function(e){
  document.getElementById('control-page').classList.remove("hidden")
	var file = e.target.files[0]
	if(file.type == "application/pdf"){
		var fileReader = new FileReader()  
		fileReader.onload = function() {
			var pdfData = new Uint8Array(this.result)

      pdfjsLib.getDocument({data: pdfData}).promise.then(function(pdfDoc_) {
        pdfDoc = pdfDoc_
        document.getElementById('page_count').textContent = pdfDoc.numPages

        renderPage(pageNum)
      })

		}
		fileReader.readAsArrayBuffer(file)
	}
})
</script>
@end